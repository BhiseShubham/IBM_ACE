

CREATE COMPUTE MODULE MF_AccountService_AccountDetails_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

		CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		--SET OutputRoot = InputRoot;
		-- log the response from CBS
		   
	 SET OutputRoot.MQMD.CorrelId = Environment.CorrelationID;
		
		
		-- mapping
			DECLARE  Get_Acct_Info_Resp REFERENCE TO  InputRoot.XMLNSC.Get_Acct_Info_Resp;
			DECLARE Account_InfoRef REFERENCE TO Get_Acct_Info_Resp.Account_Info ;
			
			
            
            CREATE LASTCHILD OF OutputRoot DOMAIN('JSON')  NAME 'JSON';  
            CREATE FIELD OutputRoot.JSON.Data.Get_Acct_Info_Resp IDENTITY(JSON.Object);  
            DECLARE OutputGet_Acct_Info_Resp REFERENCE TO OutputRoot.JSON.Data.Get_Acct_Info_Resp;
          
            CREATE FIELD OutputRoot.JSON.Data.Get_Acct_Info_Resp.Account_Info IDENTITY(JSON.Object);
            DECLARE OutputAccount_InfoRef REFERENCE TO OutputGet_Acct_Info_Resp.Account_Info;
	   
			IF Account_InfoRef.Cb_Acct_No IS NOT NULL THEN
		
				
    
           SET OutputAccount_InfoRef.Cb_Online_Sysdate = Account_InfoRef.Cb_Online_Sysdate;
		   SET OutputAccount_InfoRef.Cb_Acct_No = Account_InfoRef.Cb_Acct_No;
		   
		   DECLARE inAltIdItemRef REFERENCE TO Account_InfoRef.Alt_Id_Item[>];
		   CREATE FIELD OutputRoot.JSON.Data.Get_Acct_Info_Resp.Account_Info.Alt_Id_Item IDENTITY(JSON.Array)Alt_Id_Item;
		   DECLARE I INTEGER 1;
		   WHILE LASTMOVE(inAltIdItemRef) DO
		   	
				SET OutputAccount_InfoRef.Alt_Id_Item.Item[I].Alt_Id_Type = inAltIdItemRef.Alt_Id_Type;
			    SET OutputAccount_InfoRef.Alt_Id_Item.Item[I].Alt_Id = inAltIdItemRef.Alt_Id;
			    
			    SET I = I+1;
				MOVE inAltIdItemRef NEXTSIBLING REPEAT TYPE NAME;
			END WHILE;

--          SET OutputAccount_InfoRef.Alt_Id_Item[1].Alt_Id_Type = Account_InfoRef.Alt_Id_Item[1].Alt_Id_Type;
--			SET OutputAccount_InfoRef.Alt_Id_Item[1].Alt_Id = Account_InfoRef.Alt_Id_Item[1].Alt_Id;
--		    SET OutputAccount_InfoRef.Alt_Id_Item[2].Alt_Id_Type = Account_InfoRef.Alt_Id_Item[2].Alt_Id_Type;
--			SET OutputAccount_InfoRef.Alt_Id_Item[2].Alt_Id = Account_InfoRef.Alt_Id_Item[2].Alt_Id;
--			SET OutputAccount_InfoRef.Alt_Id_Item[3].Alt_Id_Type = Account_InfoRef.Alt_Id_Item[3].Alt_Id_Type;
--			SET OutputAccount_InfoRef.Alt_Id_Item[3].Alt_Id = Account_InfoRef.Alt_Id_Item[3].Alt_Id;
--				     
--
--
            SET OutputAccount_InfoRef.Category_Info.Category=Account_InfoRef.Category_Info.Category;
			SET OutputAccount_InfoRef.Category_Info.Category_Desc =Account_InfoRef.Category_Info.Category_Desc;
			SET OutputAccount_InfoRef.Category_Info.Category_Desc4cust =Account_InfoRef.Category_Info.Category_Desc4cust;
			SET OutputAccount_InfoRef.Category_Info.Product_Type =Account_InfoRef.Category_InfoL.Product_Type;			
--
--
--
			SET OutputAccount_InfoRef.Currency_Info.Currency = Account_InfoRef.Currency_Info.Currency;
			SET OutputAccount_InfoRef.Currency_Info.Currency_Desc = Account_InfoRef.Currency_Info.Currency_Desc;
--
--		
			SET OutputAccount_InfoRef.Account_Name.Short_Title =Account_InfoRef.Account_Name.Short_Title;
			SET OutputAccount_InfoRef.Account_Name.Account_Title_1 =Account_InfoRef.Account_Name.Short_Title_1;
			SET OutputAccount_InfoRef.Account_Name.Account_Title_2 =Account_InfoRef.Account_Name.Short_Title_2;

			SET OutputAccount_InfoRef.Opening_Date=Account_InfoRef.Opening_Date;
			SET OutputAccount_InfoRef.Co_Code=Account_InfoRef.Co_Code;
			SET OutputAccount_InfoRef.Company_Name=Account_InfoRef.Company_Name;
			SET OutputAccount_InfoRef.Inactiv_Marker=Account_InfoRef.Inactiv_Marker;
			SET OutputAccount_InfoRef.Esc_Status=Account_InfoRef.Esc_Status;
			SET OutputAccount_InfoRef.Closure_Date=Account_InfoRef.Closure_Date;
			SET OutputAccount_InfoRef.Acct_Status=Account_InfoRef.Acct_Status;
			SET OutputAccount_InfoRef.Is_Staff_Acct=Account_InfoRef.Is_Staff_Acct;
			SET OutputAccount_InfoRef.Contentieux_Sts=Account_InfoRef.Contentieux_Sts;
--
--
--
			SET OutputAccount_InfoRef.Owner.Main_Holder.Customer=Account_InfoRef.Owner.Main_Holder.Customer;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Short_Name=Account_InfoRef.Owner.Main_Holder.Short_Name;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Sector=Account_InfoRef.Owner.Main_Holder.Sector;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Sector_Desc=Account_InfoRef.Owner.Main_Holder.Sector_Desc;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Target=Account_InfoRef.Owner.Main_Holder.Target;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Target_Desc=Account_InfoRef.Owner.Main_Holder.Target_Desc;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Is_Individual=Account_InfoRef.Owner.Main_Holder.Is_Individual;
			SET OutputAccount_InfoRef.Owner.Main_Holder.Is_Minor=Account_InfoRef.Owner.Main_Holder.Is_Minor;		
--
--
           DECLARE InrefHolder REFERENCE TO Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[>];
           CREATE FIELD OutputRoot.JSON.Data.Get_Acct_Info_Resp.Account_Info.Owner.Joint_Holder_List.Joint_Holder_Item  IDENTITY(JSON.Array)Joint_Holder_Item;
           DECLARE i INTEGER 1;
           WHILE LASTMOVE(InrefHolder)  DO
           	
           SET 	OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[i].Joint_Holder = InrefHolder.Joint_Holder;
           SET 	OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[i].Short_Name = InrefHolder.Short_Name;
           SET 	OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[i].Relation_Code = InrefHolder.Relation_Code;
           SET 	OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[i].Relation_Code_Desc = InrefHolder.Relation_Code_Desc;
           SET 	OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_[i].Joint_Notes = InrefHolder.Joint_Notes;
           	SET i=i+1;
           	MOVE InrefHolder NEXTSIBLING REPEAT TYPE NAME;
           END WHILE;
           
         
--			SET OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Joint_Holder=Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Joint_Holder;
--			SET OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Short_Name=Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Short_Name;
--			SET OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Relation_Code=Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Relation_Code;
--			SET OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Relation_Code_Desc=Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Relation_Code_Desc;
--			SET OutputAccount_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Joint_Notes=Account_InfoRef.Owner.Joint_Holder_List.Joint_Holder_Item_.Joint_Notes;			
				
          
			ELSE
				-- error message in JSON mapping
		    	SET OutputRoot.JSON.Data.ErrorDescription.ErrorText= Environment.Exception.ErrorText;
				SET OutputRoot.JSON.Data.ErrorDescription.FieldName= Environment.Exception.FieldName;
				SET OutputRoot.JSON.Data.ErrorDescription.Number=Environment.Exception.Number;
			--map the values from the Evironment varibles form Exceeption details.
		END IF;
		
		-- log the final JSON Message here
		 DECLARE appname,msgflow_name,msq_id,REQ_MESSAGE_DATA,RES_MESSAGE_DATA,mybroker CHARACTER;
		    DECLARE time_stamp CHARACTER;
		   
			SET appname = ApplicationLabel;
			SET msgflow_name = MessageFlowLabel;
			SET msq_id = Environment.CorrelationID;
	        SET mybroker = BrokerName;
			SET time_stamp = CAST(CURRENT_TIMESTAMP  as CHARACTER);	
			DECLARE blobdata BLOB;
		    DECLARE blobdata1 BLOB;
		SET blobdata = ASBITSTREAM (InputRoot.XMLNSC ENCODING 546 CCSID 1208);
		SET REQ_MESSAGE_DATA = CAST (blobdata AS CHARACTER CCSID 1208);
		SET blobdata1 = ASBITSTREAM (OutputRoot.JSON ENCODING 546 CCSID 1208);
		SET RES_MESSAGE_DATA = CAST (blobdata1 AS CHARACTER CCSID 1208);
		
		 	CALL BUSINESSLOG(appname,msgflow_name,msq_id,REQ_MESSAGE_DATA,time_stamp,RES_MESSAGE_DATA,mybroker);
		
		
		
		END;
	CREATE  PROCEDURE BUSINESSLOG(IN appname CHARACTER ,IN msgflow_name CHARACTER ,IN msq_id CHARACTER,IN REQ_MESSAGE_DATA CHARACTER ,IN time_stamp CHARACTER,IN RES_MESSAGE_DATA CHARACTER,IN mybroker CHARACTER )
LANGUAGE DATABASE
EXTERNAL NAME "DB_BUSINESSLOG" ;
END MODULE;
